// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
	id					String 		@id 		@default(uuid())
	name				String?		
	email				String		@unique
	emailVerified		Boolean?				@default(false)
	hashedPassword		String?		
	image             	String?           		@default("https://tse4.mm.bing.net/th?id=OIP.-BS8Y2nH1k93GJiitUVBCAHaHa&pid=Api&P=0")
	aboutme				String?
	github				String?
	linkedin			String?
	twitter				String?
	leetcode			String?
	website				String?
	interests			String[]
	skills				String[]
	verifyToken       	String?
  	verifyTokenExpiry 	DateTime?
	resetToken			String?
	restTokenExpiry		DateTime?
	createdAt			DateTime	@default(now())
	isAdmin				Boolean		@default(false)
	accounts			Account[]
}

model Account {
	id 					String	@id @default(uuid())
	userId				String
	type				String
	provider			String
	providerAccountId	String
	refresh_token		String?
	access_token		String?
	expires_at			Int?
	token_type			String?
	scope				String?
	id_token			String?
	session_state		String?

	createdAt			DateTime	@default(now())
	updatedAt			DateTime	@updatedAt

	user				User 		@relation(fields: [userId], references: [id], onDelete: Cascade)

	@@unique([provider, providerAccountId])
	@@map("accounts")
}
